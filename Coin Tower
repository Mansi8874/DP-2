public class Solution {

	public static String findWinner(int n, int x, int y) {
		//Your code goes here
        //RECURSIVELY
        
//         if(n==0){
//             return "Whis";
//         }
//         if(n==1){
//             return "Beerus";
//         }
//         String op1=findWinner(n-1,x,y);
//         String str="Whis";
//         if(op1.equals(str)){
//             return "Beerus";
//         }
//         if(n-x>=0){
//             String op2=findWinner(n-x,x,y);
//             if(op2.equals(str)){
//                 return "Beerus";
//             }
//         }
//         if(n-y>=0){
//             String op3=findWinner(n-y,x,y);
//             if(op3.equals(str)){
//                 return "Beerus";
//             }
//         }
//         return str;
//     }
        
// }
        
        
        
        //MEMOIZATION
//         int storage[]= new int[n+1];
//         for(int i=0;i<storage.length;i++){
//             storage[i]=-1;
//         }
//         int ans=findWinner(n,x,y,storage);
//         if(ans==1){
//             return "Beerus";
//         }else{
//             return "Whis";
//         }
//     }
        
//         public static int findWinner(int n,int x,int y,int []storage){
//             if(n==0){
//                 storage[n]=0;//whis win
//                 return storage[n];
//             }
//             if(n==1){
//                 storage[n]=1;
//                 return storage[n];//Beeres win
//             }
//             if(storage[n]!=-1){
//                 return storage[n];
//             }
//             int op1=findWinner(n-1,x,y,storage);
//             if(op1==0){
//                 storage[n]=1;
//                 return storage[n];
//             }
//             if(n>=x){
//                 int op2=findWinner(n-x,x,y,storage);
//                 if(op2==0){
//                     storage[n]=1;
//                     return storage[n];
//                 }
//             }
//             if(n>=y){
//                 int op3=findWinner(n-y,x,y,storage);
//                 if(op3==0){
//                     storage[n]=1;
//                     return storage[n];
//                 }
//             }
//             storage[n]=0;
//             return storage[n];
        
//         }
// }
        
//         public static String findWinner(int n, int x, int y) {
// 		//Your code goes here
//          boolean[] dp = new boolean[n + 1];
//         for (int i = 1; i <= n; i++) {
//             if (!dp[i - 1]) dp[i] = true;
//             if (i - x >= 0 && !dp[i - x]) dp[i] = true;
//             if (i - y >= 0 && !dp[i - y]) dp[i] = true;
//         }
//         if (dp[n]) return "Beerus";
//         return "Whis";
        
// 	}
        
        
        
        
		//Your code goes here
        int[] dp = new int[n+1];
        // 0 - Whis wins ; 1 - Beerus wins
        dp[0]=0;
        dp[1]=1;
    
        for (int i=2;i<=n;i++)
        {
            //Beerus wins if dp[i-1] or dp[i-x] or dp[i-y] is 0, i.e, Whis wins when the number of coins is (i-1), (i-x) or (i-y)
            //If none of them are 0, then Beerus cannot win => This means Whis wins for i number of coins
            if (dp[i-1]==0)
            {
                dp[i]=1;
            }
            else if ((i-x)>=0 && dp[i-x]==0)
            {
                dp[i]=1;
            }
            else if ((i-y)>=0 && dp[i-y]==0)
            {
                dp[i]=1;
            }
            else
            {
                dp[i]=0;
            }
            /*
            if (dp[i]==1)
            	System.out.println("For n="+i+" coins, Winner is: Beerus");
        	else
            	System.out.println("For n="+i+" coins, Winner is: Whis");
            */
        }
        
        if (dp[n]==1)
            return "Beerus";
        else
            return "Whis";
	}

}
